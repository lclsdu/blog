<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd                 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">


	<context:component-scan base-package="com.sw" use-default-filters="false">
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
        <context:include-filter expression="org.springframework.web.bind.annotation.ControllerAdvice" type="annotation"/>
    </context:component-scan>
    <mvc:annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources location="/resources/" mapping="/resources/**"/>
    <mvc:resources location="/login/**" mapping="/login/**"/>
    <mvc:resources location="/firstpage/**" mapping="/firstpage/**"/>
    <mvc:resources location="/password/**" mapping="/password/**"/>
    <mvc:resources location="/aboutme/**" mapping="/aboutme/**"/>
    <mvc:resources location="/items/**" mapping="/items/**"/>
    <mvc:resources location="/article/**" mapping="/article/**"/>
    <mvc:resources location="/checkcodeimg/**" mapping="/checkcodeimg/**"/>

    <mvc:resources location="/**" mapping="/**"/>
    <mvc:default-servlet-handler/>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang"/>
    </mvc:interceptors>

    <!-- <mvc:view-controller path="/" view-name="redirect:/page"/> -->
    <mvc:view-controller path="/uncaughtException"/>
    <mvc:view-controller path="/resourceNotFound"/>
    <mvc:view-controller path="/myutil" view-name="util_view"/>

    <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          id="messageSource"
          p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
          p:fallbackToSystemLocale="false"/>

    <bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale"/>

    <bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource"/>

    <bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"/>
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html"/>

       <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json">
                                    <util:constant static-field="org.springframework.http.MediaType.APPLICATION_JSON_VALUE"/>
                                </entry>
                                <entry key="xml">
                                    <util:constant static-field="org.springframework.http.MediaType.APPLICATION_XML_VALUE"/>
                                </entry>
                               <entry key="html">
                                    <util:constant static-field="org.springframework.http.MediaType.TEXT_HTML_VALUE"/>
                                </entry>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
		<property name="defaultViews">
			<list>
				<!-- <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="objectMapper" ref="jacksonObjectMapper"/>
				</bean>
				 -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                     <constructor-arg ref="jaxbMarshaller"/>
                </bean>
			</list>
		</property>
	</bean>

    <!-- Enable this for integration of file upload functionality -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
	    <property name="definitions">
	      <list>
	        <value>/WEB-INF/layouts/layouts.xml</value>
	        <!-- Scan views directory for Tiles configurations -->
	        <value>/WEB-INF/views/**/views.xml</value>
	      </list>
	    </property>
	</bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <!-- 把ByteArray加在Json前面  -->
	            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	            <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
	                <property name = "supportedMediaTypes">
	                    <list>
	                        <value>text/plain;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	        </list>
	    </property>
	</bean>
</beans>
